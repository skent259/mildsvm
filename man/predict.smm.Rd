% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smm.R
\name{predict.smm}
\alias{predict.smm}
\title{Predict method for 'smm' object}
\usage{
\method{predict}{smm}(
  object,
  new_data,
  type = c("class", "raw"),
  new_instances = "instance_name",
  kernel = NULL,
  ...
)
}
\arguments{
\item{object}{an object of class smm}

\item{new_data}{matrix to predict from.  Needs to have the same number of
columns as the X that trained the 'smm' object}

\item{type}{if 'class', return predicted values with threshold of 0 as
-1 or +1.  If 'raw', return the raw predicted scores.}

\item{new_instances}{character or character vector.  Can specify a singular
character that provides the column name for the instance names in
\code{new_data}, default = "instance_name".  Can also specify a vector of length
\code{nrow(new_data)} that has instance name for each row.  When \code{object} was
fitted with \code{smm.formula}, this parameter is not necessary as the bag name
can be pulled directly from new_data, if available.}

\item{kernel}{optional pre-computed kernel matrix at the instance level,
default = NULL. This can be specified to speed up computations.  The rows
should correspond to instances in the original training data, and columns
should correspond to instances in the new data to predict.}
}
\value{
tibble with \code{nrow(new_data)} rows.  If type = 'class', the tibble
will have a column named '.pred_class'.  If type = 'raw', the tibble will
have a column name '.pred'.
}
\description{
Predict method for 'smm' object
}
\examples{
# Some fake data
set.seed(8)
n_instances <- 10
n_samples <- 20
y <- rep(c(1, -1), each = n_samples * n_instances / 2)
instances <- as.character(rep(1:n_instances, each = n_samples))
x <- data.frame(x1 = rnorm(length(y), mean = 1*(y==1)),
                x2 = rnorm(length(y), mean = 2*(y==1)),
                x3 = rnorm(length(y), mean = 3*(y==1)))

mdl <- smm(x, y, instances, control = list(sigma = 1/3))

# instance level predictions (training data)
data.frame(instance_name = instances, y = y, x) \%>\%
  bind_cols(predict(mdl, type = "raw", new_data = x, new_instances = instances)) \%>\%
  bind_cols(predict(mdl, type = "class", new_data = x, new_instances = instances)) \%>\%
  distinct(instance_name, y, .pred, .pred_class)

# test data
new_inst <- rep(c("11", "12"), each = 30)
new_y <- rep(c(1, -1), each = 30)
new_x <- data.frame(x1 = rnorm(length(new_inst), mean = 1*(new_inst=="11")),
                    x2 = rnorm(length(new_inst), mean = 2*(new_inst=="11")),
                    x3 = rnorm(length(new_inst), mean = 3*(new_inst=="11")))

# instance level predictions (test data)
data.frame(instance_name = new_inst, y = new_y, new_x) \%>\%
  bind_cols(predict(mdl, type = "raw", new_data = new_x, new_instances = new_inst)) \%>\%
  bind_cols(predict(mdl, type = "class", new_data = new_x, new_instances = new_inst)) \%>\%
    distinct(instance_name, y, .pred, .pred_class)

}
\author{
Sean Kent
}
