% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mior.R
\name{mior}
\alias{mior}
\alias{mior.default}
\alias{mior.formula}
\title{Fit MIOR model to the data}
\usage{
\method{mior}{default}(
  x,
  y,
  bags,
  cost = 1,
  cost_eta = 1,
  method = "qp-heuristic",
  weights = TRUE,
  control = list(kernel = "linear", sigma = if (is.vector(x)) 1 else 1/ncol(x),
    max_step = 500, scale = TRUE, verbose = FALSE, time_limit = 60, option =
    c("corrected", "xiao")),
  ...
)

\method{mior}{formula}(formula, data, ...)
}
\arguments{
\item{x}{A data.frame, matrix, or similar object of covariates, where each
row represents a sample.}

\item{y}{A numeric, character, or factor vector of bag labels for each
instance.  Must satisfy \code{length(y) == nrow(x)}. Suggest that one of the
levels is 1, '1', or TRUE, which becomes the positive class; otherwise, a
positive class is chosen and a message will be supplied.}

\item{bags}{A vector specifying which instance belongs to each bag.  Can be a
string, numeric, of factor.}

\item{cost}{The cost parameter in SVM. If \code{method = 'heuristic'}, this will
be fed to \code{kernlab::ksvm()}, otherwise it is similarly in internal
functions.}

\item{method}{The algorithm to use in fitting (default  \code{'heuristic'}).  When
\code{method = 'heuristic'}, which employs an algorithm similar to Andrews et
al. (2003). When \code{method = 'mip'}, the novel MIP method will be used.  When
\verb{method = 'qp-heuristic}, the heuristic algorithm is computed using the
dual SVM.  See details.}

\item{weights}{named vector, or \code{TRUE}, to control the weight of the cost
parameter for each possible y value.  Weights multiply against the cost
vector. If \code{TRUE}, weights are calculated based on inverse counts of
instances with given label, where we only count one positive instance per
bag. Otherwise, names must match the levels of \code{y}.}

\item{control}{list of additional parameters passed to the method that
control computation with the following components:
\itemize{
\item \code{kernel} either a character the describes the kernel ('linear' or
'radial') or a kernel matrix at the instance level.
\item \code{sigma} argument needed for radial basis kernel.
\item \code{nystrom_args} a list of parameters to pass to \code{\link[=kfm_nystrom]{kfm_nystrom()}}. This is
used when \code{method = 'mip'} and \code{kernel = 'radial'} to generate a Nystrom
approximation of the kernel features.
\item \code{max_step} argument used when \code{method = 'heuristic'}. Maximum steps of
iteration for the heuristic algorithm.
\item \code{type}: argument used when \code{method = 'heuristic'}. The \code{type} argument is
passed to \code{e1071::svm()}.
\item \code{scale} argument used for all methods. A logical for whether to rescale
the input before fitting.
\item \code{verbose} argument used when \code{method = 'mip'}. Whether to message output
to the console.
\item \code{time_limit} argument used when \code{method = 'mip'}. \code{FALSE}, or a time
limit (in seconds) passed to \code{gurobi()} parameters.  If \code{FALSE}, no time
limit is given.
\item \code{start} argument used when \code{method = 'mip'}.  If \code{TRUE}, the mip program
will be warm_started with the solution from \code{method = 'qp-heuristic'} to
potentially improve speed.
}}

\item{...}{Arguments passed to or from other methods.}

\item{formula}{a formula with specification \code{mi(y, bags) ~ x} which uses the
\code{mi} function to create the bag-instance structure. This argument is an
alternative to the \verb{x, y, bags} arguments, but requires the \code{data}
argument. See examples.}

\item{data}{If \code{formula} is provided, a data.frame or similar from which
formula elements will be extracted}
}
\value{
An object of class \code{mior}  The object contains at least the
following components:
TODO
}
\description{
TODO: add description here
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: Method for data.frame-like objects

\item \code{formula}: Method for passing formula
}}

\examples{
TODO

}
\seealso{
TODO
}
\author{
Sean Kent
}
