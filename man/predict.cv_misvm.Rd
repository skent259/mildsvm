% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_misvm.R
\name{predict.cv_misvm}
\alias{predict.cv_misvm}
\title{Predict method for 'cv_misvm' object}
\usage{
\method{predict}{cv_misvm}(
  object,
  new_data,
  type = c("class", "raw"),
  layer = c("bag", "instance"),
  new_bags = "bag_name"
)
}
\arguments{
\item{object}{an object of class 'cv_misvm'}

\item{new_data}{matrix to predict from.  Needs to have the same number of
columns as the X that trained the misvm object}

\item{type}{if 'class', return predicted values with threshold of 0 as
-1 or +1.  If 'raw', return the raw predicted scores.}

\item{layer}{if 'bag', return predictions at the bag level.  If 'instance',
return predictions at the instance level.}

\item{new_bags}{character or character vector.  Can specify a singular
character that provides the column name for the bag names in \code{new_data},
default = "bag_name".  Can also specify a vector of length \code{nrow(new_data)}
that has bag name for each instance.  When \code{object} was fitted with
\code{misvm.formula}, this parameter is not necessary as the bag name can be
pulled directly from new_data, if available.}
}
\value{
tibble with \code{nrow(new_data)} rows.  If type = 'class', the tibble
will have a column '.pred_class'.  If type = 'raw', the tibble will have
a column '.pred'.
}
\description{
Predict method for 'cv_misvm' object
}
\examples{
mil_data <- GenerateMilData(
  positive_dist = 'mvt',
  negative_dist = 'mvnormal',
  remainder_dist = 'mvnormal',
  nbag = 20,
  nsample = 20,
  positive_degree = 3,
  positive_prob = 0.15,
  positive_mean = rep(0, 5)
)
df1 <- build_instance_feature(mil_data, seq(0.05, 0.95, length.out = 10))
mdl1 <- cv_misvm(x = df[, 4:123], y = df$bag_label,
                 bags = df$bag_name, cost_seq = cost_seq,
                 n_fold = 3, method = "heuristic")


predict(mdl1, new_data = df1, type = "raw", layer = "bag")

# summarize predictions at the bag layer
library(dplyr)
df1 \%>\%
  bind_cols(predict(mdl2, df1, type = "class")) \%>\%
  bind_cols(predict(mdl2, df1, type = "raw")) \%>\%
  distinct(bag_name, bag_label, .pred_class, .pred)

}
\author{
Sean Kent
}
